{"version":3,"sources":["components/Searchbar/Searchbar.module.scss","UI/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.scss","components/ImageGallery/ImageGallery.module.scss","components/App/App.module.scss","UI/Layout/Layout.style.js","UI/Layout/Layout.jsx","UI/SectionWrap/SectionWrap.style.js","UI/SectionWrap/SectionWrap.jsx","UI/Spinner/Spinner.jsx","UI/Button/Button.style.js","UI/Button/Button.jsx","UI/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","styled","div","Layout","children","Section","Title","h3","SectionWrap","title","Spinner","color","size","type","Btn","button","Button","onClick","defaultProps","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onCloseModal","handleBackdropClick","target","currentTarget","window","addEventListener","this","removeEventListener","createPortal","className","s","backdrop","modal","Component","INICIAL_STATE","request","Searchbar","state","handleChangeSearch","value","setState","toLowerCase","console","log","handleSubmit","evt","preventDefault","onSubmit","trim","resetSearch","toast","error","css","SearchForm","SearchForm_button","SearchForm_button_label","SearchForm_input","autocomplete","autofocus","placeholder","onChange","ImageGalleryItem","webformatURL","tags","largeImageURL","onClickImg","src","alt","ImageGalleryItem_image","ImageGallery","images","map","id","App","contacts","filter","name","phone","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","contact","alert","handleRemoveContact","handleChangeFilter","getVisibleContacts","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","isLoading","showModal","showButton","Error","modalImage","getImages","onClose","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20cb2c82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__20TYs\",\"SearchForm\":\"Searchbar_SearchForm__FfWZS\",\"SearchForm_button\":\"Searchbar_SearchForm_button__1HijV\",\"SearchForm-button\":\"Searchbar_SearchForm-button__2XsfP\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__1Y4UE\",\"SearchForm_input\":\"Searchbar_SearchForm_input__N0WYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3q-wz\",\"modal\":\"Modal_modal__1z41f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2FQJu\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__3z8BJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3enLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"App_Error__sHb60\",\"App\":\"App_App__wZCrJ\"};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 1283px) {\r\n    width: 940px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 520px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n","import { Container } from './Layout.style';\r\nimport React from 'react';\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.div`\r\n    padding-top: 35px;\r\n    padding-bottom: 35px;\r\n    background-color: #fff;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n    border-radius: 7px;\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n    border: 1px solid rgba(128, 128, 128, 0.4);\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 15px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Section, Title } from './SectionWrap.style';\r\n\r\nconst SectionWrap = ({ title, children }) => (\r\n    <Section>\r\n        {title && <Title>{title}</Title>}\r\n        {children}\r\n    </Section>\r\n);\r\n\r\nSectionWrap.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default SectionWrap;\r\n","import Loader from 'react-loader-spinner';\n\nconst Spinner = () => <Loader color=\"#57ba41\" size=\"23\" type=\"Rings\" />;\n\nexport default Spinner;\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n  cursor: pointer;\r\n  color: #7366ff;\r\n  font-weight: 500;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  background-color: rgba(115, 102, 255, 0.15);\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    background-color: #7366ff;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Btn } from './Button.style';\r\n\r\nconst Button = ({ children, onClick }) => (\r\n    <Btn onClick={onClick}>{children}</Btn>\r\n);\r\n\r\nButton.defaultProps = {\r\n    children: '',\r\n};\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onCloseModal();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.target === e.currentTarget) {\r\n            this.props.onCloseModal();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className={s.backdrop} onClick={this.handleBackdropClick}>\r\n                <div className={s.modal}>{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n  onCloseModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.scss';\n\nconst INICIAL_STATE = {\n    request: '',\n};\nexport class Searchbar extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n\n    state = INICIAL_STATE;\n\n    handleChangeSearch = ({ target }) => {\n        const { request, value } = target;\n        this.setState({ [request]: value.toLowerCase() });\n        console.log(value);\n    };\n\n    handleSubmit = evt => {\n        evt.preventDefault();\n        const { request } = this.state;\n        const { onSubmit } = this.props;\n        if (request.trim() === '') {\n            toast.error('Введите поисковый запрос');\n            return;\n        }\n        onSubmit({ request });\n        this.resetSearch();\n    };\n\n    resetSearch = () => {\n        this.setState(INICIAL_STATE);\n    };\n\n    render() {\n        const { request } = this.state;\n        return (\n            <header className={css.Searchbar}>\n                <form onSubmit={this.handleSubmit} className={css.SearchForm}>\n                    <button type=\"submit\" className={css.SearchForm_button}>\n                        <span className={css.SearchForm_button_label}>\n                            Search\n                        </span>\n                    </button>\n                    <input\n                        className={css.SearchForm_input}\n                        type=\"text\"\n                        autocomplete=\"off\"\n                        autofocus\n                        placeholder=\"Search images and photos\"\n                        onChange={this.handleChangeSearch}\n                        value={request}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n","import React from 'react';\r\nimport css from './ImageGalleryItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n const ImageGalleryItem = ({\r\n    webformatURL,\r\n    tags,\r\n    largeImageURL,\r\n    onClickImg,\r\n}) => {\r\n    return (\r\n        <li className={css.ImageGalleryItem}>\r\n            <img\r\n                src={webformatURL}\r\n                alt={tags}\r\n                className={css.ImageGalleryItem_image}\r\n                data-source={largeImageURL}\r\n                onClick={onClickImg}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport css from './ImageGallery.module.scss';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ImageGallery = ({ images, onClickImg }) => {\r\n    return (\r\n        <ul className={css.ImageGallery}>\r\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    webformatURL={webformatURL}\r\n                    tags={tags}\r\n                    onClickImg={onClickImg}\r\n                    largeImageURL={largeImageURL}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n    onClickImg: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Layout } from 'UI/Layout';\r\nimport { SectionWrap } from 'UI/SectionWrap';\r\nimport { Spinner } from 'UI/Spinner';\r\nimport { Button } from 'UI/Button';\r\nimport { Modal } from 'UI/Modal';\r\nimport { Searchbar } from 'components/Searchbar';\r\nimport { ImageGallery } from 'components/ImageGallery';\r\n\r\nimport css from './App.module.scss';\r\n// import moduleName from 'module'\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n        name: '',\r\n        phone: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n        parsedContacts && this.setState({ contacts: parsedContacts });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem(\r\n                'contacts',\r\n                JSON.stringify(this.state.contacts),\r\n            );\r\n        }\r\n    }\r\n\r\n    handleAddContact = newContact =>\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [...contacts, newContact],\r\n        }));\r\n\r\n    handleCheckUniqueContact = name => {\r\n        const { contacts } = this.state;\r\n        const isExistContact = !!contacts.find(\r\n            contact => contact.name === name,\r\n        );\r\n        isExistContact && alert('Contact is already exist');\r\n        return !isExistContact;\r\n    };\r\n\r\n    handleRemoveContact = id =>\r\n        this.setState(({ contacts }) => ({\r\n            contacts: contacts.filter(contact => contact.id !== id),\r\n        }));\r\n\r\n    handleChangeFilter = filter => this.setState({ filter });\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            images,\r\n            isLoading,\r\n            showModal,\r\n            largeImageURL,\r\n            error,\r\n            showButton,\r\n        } = this.state;\r\n        return (\r\n            <Layout>\r\n                <Searchbar onSubmit={this.onSubmit} />\r\n                {error && <p className={css.Error}>{error}</p>}\r\n                {images && (\r\n                    <SectionWrap>\r\n                        <ImageGallery\r\n                            images={images}\r\n                            modalImage={this.modalImage}\r\n                        />\r\n                    </SectionWrap>\r\n                )}\r\n                {isLoading && <Spinner />}\r\n                {showButton && !isLoading && (\r\n                    <Button onClick={this.getImages} />\r\n                )}\r\n                {showModal && (\r\n                    <Modal onClose={this.toggleModal}>\r\n                        <img src={largeImageURL} alt=\"\" />\r\n                    </Modal>\r\n                )}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}