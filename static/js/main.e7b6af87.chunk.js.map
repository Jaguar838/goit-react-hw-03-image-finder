{"version":3,"sources":["components/ContactForm/ContactForm.module.css","UI/Layout/Layout.style.js","UI/Layout/Layout.jsx","UI/SectionWrap/SectionWrap.style.js","UI/SectionWrap/SectionWrap.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.scss"],"names":["module","exports","Container","styled","div","Layout","children","Section","Title","h3","SectionWrap","title","INICIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","evt","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","className","css","input","type","placeholder","pattern","onChange","Component","ContactListItem","onRemove","item","span","onClick","ContactList","contacts","console","log","map","key","Filter","filter","label","labelText","required","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","contact","handleRemoveContact","handleChangeFilter","getVisibleContacts","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b6af87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1pgzP\"};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 1283px) {\r\n    width: 940px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 520px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n","import { Container } from './Layout.style';\r\nimport React from 'react';\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.div`\r\n    padding-top: 35px;\r\n    padding-bottom: 35px;\r\n    background-color: #fff;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n    border-radius: 7px;\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n    border: 1px solid rgba(128, 128, 128, 0.4);\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 15px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Section, Title } from './SectionWrap.style';\r\n\r\nconst SectionWrap = ({ title, children }) => (\r\n    <Section>\r\n        {title && <Title>{title}</Title>}\r\n        {children}\r\n    </Section>\r\n);\r\n\r\nSectionWrap.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default SectionWrap;\r\n","import React, { Component } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport css from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INICIAL_STATE = {\r\n    name: '',\r\n    phone: '',\r\n};\r\nexport class ContactForm extends Component {\r\n    static propTypes = {\r\n        onAdd: PropTypes.func.isRequired,\r\n    };\r\n    state = INICIAL_STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = evt => {\r\n        evt.preventDefault();\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n        const isValidateForm = this.validateForm();\r\n        if (!isValidateForm) return;\r\n        onAdd({ id: uuid(), name, phone });\r\n        this.resetForm();\r\n    };\r\n\r\n    resetForm = () => {\r\n        this.setState(INICIAL_STATE);\r\n    };\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !phone) {\r\n            alert('Some field is empty');\r\n            return false;\r\n        }\r\n        return onCheckUnique(name);\r\n    };\r\n    render() {\r\n        const { name, phone } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleFormSubmit}>\r\n                <input\r\n                    className={css.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    value={name}\r\n                    onChange={this.handleChangeForm}\r\n                />\r\n                <input\r\n                    className={css.input}\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    value={phone}\r\n                    onChange={this.handleChangeForm}\r\n                />\r\n                <button className=\"btn\" type=\"submit\">\r\n                    Add Contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ name, phone, onRemove }) => {\r\n    return (\r\n        <li className={css.item}>\r\n            <span className={css.span}>\r\n                {name}:{phone}\r\n            </span>\r\n            <button className=\"btn\" onClick={onRemove}>\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport const ContactList = ({ contacts, onRemove }) => {\r\n    console.log(contacts);\r\n    return (\r\n        <ul className={css.contacts}>\r\n            {contacts?.map(({ id, name, phone }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    name={name}\r\n                    phone={phone}\r\n                    onRemove={() => onRemove(id)}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.node.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            phone: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Filter.module.scss';\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <label className={css.label}>\r\n            <span className={css.labelText}>Find contacts by name</span>\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={({ target }) => onChange(target.value)}\r\n                placeholder=\"Enter name for Search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                className={css.input}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { Layout } from 'UI/Layout';\nimport { SectionWrap } from 'UI/SectionWrap';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n// import testContacts from 'server/contacts.json';\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n        name: '',\n        phone: '',\n    };\n\n    componentDidMount() {\n        console.log('App componentDidMount');\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n        parsedContacts && this.setState({ contacts: parsedContacts });\n    }\n\n    componentDidUpdate(prevState) {\n        console.log('App componentDidUpdate');\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    handleAddContact = newContact =>\n        this.setState(({ contacts }) => ({\n            contacts: [...contacts, newContact],\n        }));\n\n    handleCheckUniqueContact = name => {\n        const { contacts } = this.state;\n        const isExistContact = !!contacts.find(\n            contact => contact.name === name,\n        );\n        isExistContact && alert('Contact is already exist');\n        return !isExistContact;\n    };\n\n    handleRemoveContact = id =>\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== id),\n        }));\n\n    handleChangeFilter = filter => this.setState({ filter });\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n        return (\n            <Layout>\n                <SectionWrap title=\"Phonebook\">\n                    <ContactForm\n                        onAdd={this.handleAddContact}\n                        onCheckUnique={this.handleCheckUniqueContact}\n                    />\n                </SectionWrap>\n\n                <SectionWrap title=\"Contact List\">\n                    <Filter\n                        filter={filter}\n                        onChange={this.handleChangeFilter}\n                    />\n                    <ContactList\n                        contacts={visibleContacts}\n                        onRemove={this.handleRemoveContact}\n                    />\n                </SectionWrap>\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2Vvp6\",\"span\":\"ContactList_span__2B5GY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1XFDO\",\"labelText\":\"Filter_labelText__3bHmS\",\"input\":\"Filter_input__3Y8TP\"};"],"sourceRoot":""}