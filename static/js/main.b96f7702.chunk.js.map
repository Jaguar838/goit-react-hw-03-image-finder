{"version":3,"sources":["components/ContactForm/ContactForm.module.css","UI/Layout/Layout.style.js","UI/Layout/Layout.jsx","UI/SectionWrap/SectionWrap.style.js","UI/SectionWrap/SectionWrap.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","styled","div","Layout","children","Section","Title","h3","SectionWrap","title","INICIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","evt","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","className","css","input","type","placeholder","onChange","Component","ContactListItem","onRemove","item","span","onClick","ContactList","contacts","console","log","map","key","Filter","filter","label","labelText","pattern","required","App","testContacts","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","contact","handleRemoveContact","handleChangeFilter","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,6B,6cCCbC,EAAYC,IAAOC,IAAV,wTCGPC,EAFA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACJ,EAAD,KAAYI,ICDhCC,EAAUJ,IAAOC,IAAV,sVAYPI,EAAQL,IAAOM,GAAV,sDCEHC,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,SAAV,OAChB,kBAACC,EAAD,KACKI,GAAS,kBAACH,EAAD,KAAQG,GACjBL,I,0CCFHM,EAAgB,CAClBC,KAAM,GACNC,MAAO,IAEEC,EAAb,4MAIIC,MAAQJ,EAJZ,EAMIK,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACVL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,KARhC,EAWIE,iBAAmB,SAAAC,GACfA,EAAIC,iBACJ,MAAwB,EAAKP,MAArBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACNU,EAAU,EAAKC,MAAfD,MACe,EAAKE,iBAE5BF,EAAM,CAAEG,GAAIC,MAAQf,OAAMC,UAC1B,EAAKe,cAlBb,EAqBIA,UAAY,WACR,EAAKT,SAASR,IAtBtB,EAyBIc,aAAe,WACX,MAAwB,EAAKV,MAArBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACNgB,EAAkB,EAAKL,MAAvBK,cACR,OAAKjB,GAASC,EAIPgB,EAAcjB,IAHjBkB,MAAM,wBACC,IA9BnB,4CAkCI,WACI,MAAwBC,KAAKhB,MAArBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OACI,0BAAMmB,SAAUD,KAAKX,kBACjB,2BACIa,UAAWC,IAAIC,MACfC,KAAK,OACLxB,KAAK,OACLyB,YAAY,aACZnB,MAAON,EACP0B,SAAUP,KAAKf,mBAEnB,2BACIiB,UAAWC,IAAIC,MACfC,KAAK,MACLxB,KAAK,QACLyB,YAAY,qBACZnB,MAAOL,EACPyB,SAAUP,KAAKf,mBAEnB,4BAAQiB,UAAU,MAAMG,KAAK,UAA7B,oBAtDhB,GAAiCG,a,gBCJ3BC,EAAkB,SAAC,GAA+B,IAA7B5B,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAO4B,EAAe,EAAfA,SACpC,OACI,wBAAIR,UAAWC,IAAIQ,MACf,0BAAMT,UAAWC,IAAIS,MAChB/B,EADL,IACYC,GAEZ,4BAAQoB,UAAU,MAAMW,QAASH,GAAjC,YAOCI,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUL,EAAe,EAAfA,SAEpC,OADAM,QAAQC,IAAIF,GAER,wBAAIb,UAAWC,IAAIY,UAAnB,OACKA,QADL,IACKA,OADL,EACKA,EAAUG,KAAI,gBAAGvB,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACX,kBAAC,EAAD,CACIqC,IAAKxB,EACLd,KAAMA,EACNC,MAAOA,EACP4B,SAAU,kBAAMA,EAASf,W,gBCvBhCyB,EAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQd,EAAe,EAAfA,SAC7B,OACI,2BAAOL,UAAWC,IAAImB,OAClB,0BAAMpB,UAAWC,IAAIoB,WAArB,yBACA,2BACIlB,KAAK,OACLxB,KAAK,SACLM,MAAOkC,EACPd,SAAU,gBAAGrB,EAAH,EAAGA,OAAH,OAAgBqB,EAASrB,EAAOC,QAC1CmB,YAAY,wBACZkB,QAAQ,yHACR7C,MAAM,kcACN8C,UAAQ,EACRvB,UAAWC,IAAIC,U,QCTVsB,E,4MACjB1C,MAAQ,CACJ+B,SAAUY,EACVN,OAAQ,GACRxC,KAAM,GACNC,MAAO,I,EAGX8C,iBAAmB,SAAAC,GAAU,OACzB,EAAKzC,UAAS,gBAAG2B,EAAH,EAAGA,SAAH,MAAmB,CAC7BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBc,S,EAGhCC,yBAA2B,SAAAjD,GACvB,IACMkD,IADe,EAAK/C,MAAlB+B,SAC0BiB,MAC9B,SAAAC,GAAO,OAAIA,EAAQpD,OAASA,KAGhC,OADAkD,GAAkBhC,MAAM,6BAChBgC,G,EAGZG,oBAAsB,SAAAvC,GAAE,OACpB,EAAKP,UAAS,kBAAmB,CAC7B2B,SADU,EAAGA,SACMM,QAAO,SAAAY,GAAO,OAAIA,EAAQtC,KAAOA,U,EAG5DwC,mBAAqB,SAAAd,GAAM,OAAI,EAAKjC,SAAS,CAAEiC,Y,EAC/Ce,mBAAqB,WACjB,MAA6B,EAAKpD,MAA1B+B,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OAClB,OAAON,EAASM,QAAO,SAAAY,GAAO,OAC1BA,EAAQpD,KAAKwD,cAAcC,SAASjB,EAAOgB,mB,4CAInD,WACI,IAAQhB,EAAWrB,KAAKhB,MAAhBqC,OACFkB,EAAkBvC,KAAKoC,qBAC7B,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAazD,MAAM,aACf,kBAAC,EAAD,CACIa,MAAOQ,KAAK4B,iBACZ9B,cAAeE,KAAK8B,4BAI5B,kBAAC,EAAD,CAAanD,MAAM,gBACf,kBAAC,EAAD,CACI0C,OAAQA,EACRd,SAAUP,KAAKmC,qBAEnB,kBAAC,EAAD,CACIpB,SAAUwB,EACV7B,SAAUV,KAAKkC,4B,GAtDN1B,a,MCFjCgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1B5E,EAAOC,QAAU,CAAC,SAAW,8BAA8B,KAAO,4B,kBCAlED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,0BAA0B,MAAQ,yB","file":"static/js/main.b96f7702.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3rGEv\"};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 1283px) {\r\n    width: 940px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 520px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n","import { Container } from './Layout.style';\nimport React from 'react';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nexport default Layout;\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.div`\r\n    padding-top: 35px;\r\n    padding-bottom: 35px;\r\n    background-color: #fff;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n    border-radius: 7px;\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n    border: 1px solid rgba(128, 128, 128, 0.4);\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 15px;\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section, Title } from './SectionWrap.style';\n\nconst SectionWrap = ({ title, children }) => (\n    <Section>\n        {title && <Title>{title}</Title>}\n        {children}\n    </Section>\n);\n\nSectionWrap.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default SectionWrap;\n","import React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst INICIAL_STATE = {\n    name: '',\n    phone: '',\n};\nexport class ContactForm extends Component {\n    static propTypes = {\n        onAdd: PropTypes.func.isRequired,\n    };\n    state = INICIAL_STATE;\n\n    handleChangeForm = ({ target }) => {\n        const { name, value } = target;\n        this.setState({ [name]: value });\n    };\n\n    handleFormSubmit = evt => {\n        evt.preventDefault();\n        const { name, phone } = this.state;\n        const { onAdd } = this.props;\n        const isValidateForm = this.validateForm();\n        if (!isValidateForm) return;\n        onAdd({ id: uuid(), name, phone });\n        this.resetForm();\n    };\n\n    resetForm = () => {\n        this.setState(INICIAL_STATE);\n    };\n\n    validateForm = () => {\n        const { name, phone } = this.state;\n        const { onCheckUnique } = this.props;\n        if (!name || !phone) {\n            alert('Some field is empty');\n            return false;\n        }\n        return onCheckUnique(name);\n    };\n    render() {\n        const { name, phone } = this.state;\n        return (\n            <form onSubmit={this.handleFormSubmit}>\n                <input\n                    className={css.input}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.handleChangeForm}\n                />\n                <input\n                    className={css.input}\n                    type=\"tel\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone number\"\n                    value={phone}\n                    onChange={this.handleChangeForm}\n                />\n                <button className=\"btn\" type=\"submit\">\n                    Add Contact\n                </button>\n            </form>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './ContactList.module.css';\n\nconst ContactListItem = ({ name, phone, onRemove }) => {\n    return (\n        <li className={css.item}>\n            <span className={css.span}>\n                {name}:{phone}\n            </span>\n            <button className=\"btn\" onClick={onRemove}>\n                Delete\n            </button>\n        </li>\n    );\n};\n\nexport const ContactList = ({ contacts, onRemove }) => {\n    console.log(contacts);\n    return (\n        <ul className={css.contacts}>\n            {contacts?.map(({ id, name, phone }) => (\n                <ContactListItem\n                    key={id}\n                    name={name}\n                    phone={phone}\n                    onRemove={() => onRemove(id)}\n                />\n            ))}\n        </ul>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.node.isRequired,\n            name: PropTypes.string.isRequired,\n            phone: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nexport const Filter = ({ filter, onChange }) => {\n    return (\n        <label className={css.label}>\n            <span className={css.labelText}>Find contacts by name</span>\n            <input\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={({ target }) => onChange(target.value)}\n                placeholder=\"Enter name for Search\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                className={css.input}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Layout } from 'UI/Layout';\nimport { SectionWrap } from 'UI/SectionWrap';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport testContacts from 'server/contacts.json';\n\nexport default class App extends Component {\n    state = {\n        contacts: testContacts,\n        filter: '',\n        name: '',\n        phone: '',\n    };\n\n    handleAddContact = newContact =>\n        this.setState(({ contacts }) => ({\n            contacts: [...contacts, newContact],\n        }));\n\n    handleCheckUniqueContact = name => {\n        const { contacts } = this.state;\n        const isExistContact = !!contacts.find(\n            contact => contact.name === name,\n        );\n        isExistContact && alert('Contact is already exist');\n        return !isExistContact;\n    };\n\n    handleRemoveContact = id =>\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== id),\n        }));\n\n    handleChangeFilter = filter => this.setState({ filter });\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n        return (\n            <Layout>\n                <SectionWrap title=\"Phonebook\">\n                    <ContactForm\n                        onAdd={this.handleAddContact}\n                        onCheckUnique={this.handleCheckUniqueContact}\n                    />\n                </SectionWrap>\n\n                <SectionWrap title=\"Contact List\">\n                    <Filter\n                        filter={filter}\n                        onChange={this.handleChangeFilter}\n                    />\n                    <ContactList\n                        contacts={visibleContacts}\n                        onRemove={this.handleRemoveContact}\n                    />\n                </SectionWrap>\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2nnpl\",\"span\":\"ContactList_span__2u9Ly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2E4pR\",\"labelText\":\"Filter_labelText__2kLI2\",\"input\":\"Filter_input__fou_e\"};"],"sourceRoot":""}